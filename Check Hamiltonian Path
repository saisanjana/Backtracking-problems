"""This python program checks if the graph can have a hamiltonian path i.e. can have a path where each vetrex is traversed only once"""
def hamil(graph,path,n):
    if(len(path)==n):
        return 1
    x=path[-1]
    for i in range(n):
        if(graph[x][i]==1 and (i not in path)):
            path.append(i)
            if(hamil(graph,path,n)==1):
                return 1
            else:
                path.pop(-1)
    return 0
    
t=int(input())
while(t>0):
    t=t-1
    n,m=input().split()
    n=int(n);m=int(m)
    l=input().split()
    for i in range(2*m):
        l[i]=int(l[i])
    graph=[]
    for i in range(n):
        mat=[0 for j in range(n)]
        graph.append(mat)
    for i in range(0,2*m-1,2):
        graph[l[i]-1][l[i+1]-1]=1
        graph[l[i+1]-1][l[i]-1]=1
    path=[];f=0
    #print(graph)
    for i in range(n):
        path.append(i)
        if(hamil(graph,path,n)==1):
            print(1)
            #print(path)
            f=1
            break
        path.pop(-1)
    if(f==0):
        print(0)
